package AplikasiPenjualan;

import AplikasiPenjualan.ServerAPI.ServerAPI;
import java.awt.Color;
import java.util.ArrayList;

public class DataBarangPage extends javax.swing.JPanel {

    public DataBarangPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        pageTitle = new javax.swing.JLabel();
        tambahDataButton = new javax.swing.JButton();
        hapusButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1200, 800));

        dataTable.getTableHeader().setFont(new java.awt.Font("Arial", 0, 16));
        dataTable.getTableHeader().setBackground(Color.BLACK);
        dataTable.getTableHeader().setForeground(Color.WHITE);
        dataTable.setFont(new java.awt.Font("Lucida Fax", 0, 14)); // NOI18N
        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama Barang", "Harga", "Stok"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.setPreferredSize(new java.awt.Dimension(1200, 800));
        dataTable.setRowHeight(20);
        dataTable.getTableHeader().setReorderingAllowed(false);

        //get data barang from DB and addding it to table
        javax.swing.table.DefaultTableModel tableModel = (javax.swing.table.DefaultTableModel) dataTable.getModel();
        ArrayList<String[]> dataBarang = ServerAPI.get_data_barang();
        for(String[] row : dataBarang){
            tableModel.addRow(row);
        }

        jScrollPane1.setViewportView(dataTable);
        if (dataTable.getColumnModel().getColumnCount() > 0) {
            dataTable.getColumnModel().getColumn(0).setMinWidth(70);
            dataTable.getColumnModel().getColumn(0).setPreferredWidth(70);
            dataTable.getColumnModel().getColumn(0).setMaxWidth(70);
            dataTable.getColumnModel().getColumn(1).setMinWidth(500);
            dataTable.getColumnModel().getColumn(1).setMaxWidth(500);
            dataTable.getColumnModel().getColumn(3).setMinWidth(100);
            dataTable.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        pageTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        pageTitle.setText("Data Barang");

        tambahDataButton.setText("Tambah Barang");
        tambahDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahDataButtonActionPerformed(evt);
            }
        });

        hapusButton.setText("Hapus");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pageTitle)
                .addGap(244, 244, 244)
                .addComponent(editButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hapusButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tambahDataButton))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pageTitle)
                    .addComponent(tambahDataButton)
                    .addComponent(hapusButton)
                    .addComponent(editButton))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tambahDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahDataButtonActionPerformed
        new TambahDataBarangDialog((javax.swing.JFrame)this.getTopLevelAncestor()).setVisible(true);
    }//GEN-LAST:event_tambahDataButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        if(dataTable.getSelectedRows().length != 0){
            String kode_barang = (String) dataTable.getValueAt(dataTable.getSelectedRow(), 0);
            new EditDataBarangDialog((javax.swing.JFrame)this.getTopLevelAncestor(), kode_barang).setVisible(true);
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        if(dataTable.getSelectedRows().length != 0){
            String id_barang = (String) dataTable.getValueAt(dataTable.getSelectedRow(), 0);
            boolean isDeleted = ServerAPI.delete_data_barang(id_barang);
            
            if(isDeleted){
                refresh();
            }
        }
    }//GEN-LAST:event_hapusButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable dataTable;
    private javax.swing.JButton editButton;
    private javax.swing.JButton hapusButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel pageTitle;
    private javax.swing.JButton tambahDataButton;
    // End of variables declaration//GEN-END:variables

    //my own declaration
    
    public void refresh(){
        System.out.print("\nRefreshing data barang page...");
        javax.swing.table.DefaultTableModel tableModel = (javax.swing.table.DefaultTableModel) dataTable.getModel();
        ArrayList<String[]> dataBarang = ServerAPI.get_data_barang();
        int rowCount = dataTable.getRowCount();
        for(int i=0; i<rowCount; ++i){
            tableModel.removeRow(0);
        }
        for(String[] row : dataBarang){
            tableModel.addRow(row);
        }
    }
}
